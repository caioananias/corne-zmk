/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SQT   &none
&none  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &none
                     &kp LGUI  &mo 0  &kp SPACE    &kp RET  &mo 1  &kp RALT
            >;
        };

        Nav {
            bindings = <
&none  &none         &none         &none             &none           &none    &kp LC(Y)     &kp LC(V)      &kp LC(C)      &kp LC(X)    &kp LC(Z)  &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none    &kp CAPSLOCK  &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT  &none
&none  &none         &none         &none             &none           &none    &kp INSERT    &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none
                                   &none             &none           &none    &kp ENTER     &kp BACKSPACE  &kp DEL
            >;
        };

        Mouse {
            bindings = <
&none  &none         &none         &none             &none           &none    &kp LC(Y)  &kp LC(V)         &kp LC(C)         &kp LC(X)       &kp LC(Z)          &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none    &none      &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_UP    &mmv MOVE_RIGHT    &none
&none  &none         &none         &none             &none           &none    &none      &mwh SCROLL_LEFT  &mwh SCROLL_DOWN  &mwh SCROLL_UP  &mwh SCROLL_RIGHT  &none
                                   &none             &none           &none    &mkp MB2   &mkp MB1          &mkp MB3
            >;
        };

        Button {
            bindings = <
&none  &kp Z     &kp X      &kp C      &kp V      &kp Y        &kp LC(Y)  &kp LC(V)       &kp LC(C)          &kp LC(X)     &kp LC(Z)  &none
&none  &kp LGUI  &kp LALT   &kp LCTRL  &kp LSHFT  &none        &none      &kp LEFT_SHIFT  &kp RIGHT_CONTROL  &kp LEFT_ALT  &kp LGUI   &none
&none  &none     &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y)    &kp LC(Y)  &kp LC(V)       &kp LC(C)          &kp LC(X)     &none      &none
                            &mkp MB3   &mkp MB1   &mkp MB2     &mkp MB2   &mkp MB1        &mkp MB3
            >;
        };

        Media {
            bindings = <
&none  &none     &none     &none      &none      &none    &none              &none             &none         &none         &none         &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &ext_power EP_TOG  &kp C_PREV        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &none
&none  &none     &none     &none      &none      &none    &out OUT_TOG       &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none
                           &none      &none      &none    &kp C_STOP         &kp C_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        Num {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI          &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp GRAVE         &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans     &trans     &trans    &trans    &trans
                                  &kp DOT  &kp N0  &kp MINUS    &trans  &trans     &trans
            >;
        };

        Sym {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON       &kp DOLLAR       &kp PRCNT             &kp CARET              &kp PLUS           &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &trans  &trans     &trans     &trans    &trans    &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER          &trans  &trans     &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans    &trans    &trans
                        &trans  &trans  &trans    &trans  &trans     &trans
            >;
        };
    };
};
